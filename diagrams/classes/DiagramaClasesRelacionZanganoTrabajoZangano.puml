@startuml
interface Ejecutable {
   + {abstract} ejecutarTurno(r :RazaRecursos): void
}

class Zangano {
   + setTrabajo(t: TrabajoZangano): void
   + ejecutarTurno(r :RazaRecursos): void
   - extraer()
}
note left of Zangano::extraer
  int recursoExtraido = tipoTrabajo.extraer(r);
  actualizarRecursosRaza();
end note
note right of Zangano::ejecutarTurno
  ...
  extraer(r)
end note



abstract class TrabajoZangano {
   # recurso : Recurso
   + {abstract} extraer(r :RazaRecursos): void
}

class TrabajoGas{
   + TrabajoRecurso(r: Recurso)
   + extraer(r :RazaRecursos): void
}
note right of TrabajoGas::extraer
  int gas = super.recurso.extraer(10);
  r.aumentarGas(gas);
end note

class TrabajoMineral{
   + TrabajoRecurso(r: Recurso)
   + extraer(r :RazaRecursos): void
}
note right of TrabajoMineral::extraer
  int mineral = super.recurso.extraer(10);
  r.aumentarMineral(mineral);
end note


class Nada{
   + Nada()
   + extraer(r :RazaRecursos): void
}
note right of Nada::extraer
  return
end note


Zangano ..|> Ejecutable
Zangano --> TrabajoZangano

TrabajoGas..|> TrabajoZangano
TrabajoMineral..|> TrabajoZangano
Nada ..|> TrabajoZangano
@enduml