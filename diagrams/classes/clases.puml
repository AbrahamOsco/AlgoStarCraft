@startuml



class Juego {
    +ejecutarJuego()
    -actualizarPosiciones()
    +construirAsimilador(posicion)
}

class Zangano{
    -extraer()
    +ejecutarTurno(razaRecursos: RazaRecursos)
        +setTrabajo(trabajoZangano: TrabajoZangano)
}
class Larva{
    +evolucionar(): Zangano
}

class RazaZerg{
    -razaRecursos: razaRecursos
    + obtenerZangano(): Zangano
    +ejecutarTurno():void
    +agregarNuevoEdificio(unEdificio: Edificio)
    +agregarNuevoEdificioExtractor(unExtractor: Extractor)
    +evolucionarUnZangano(unCriadero: Criadero)
    +getCantidadGas()
}
class Criadero{
    -Larvas:ArrayList
    #cantTurnosParaSerOperativo: Int
    +removerLarva():Individuo
    +ejecutarTurno():void
    -cargarTodaslasLarvas()
}


abstract class Edificio{
    -posicion
    +regenerarVida()
    +vidaActual()
    +escudoActual()
    +recibirDaño()
}

class Extractor{
    -zanganos: ArrayList
    +ejecutarTurno()
    +agregarZangano(nuevoZangano: Zangano)
}

abstract class Individuo {
    -posicion
    {abstract} +evolucionar()
    +mover()
}

class Mapa {
    -matrizPosiciones?
    +registrarPosiciones()
}

abstract class Recursos {
    -posicion
    {abstract} +extraer()
}

class NodoMineral {
    -unidadesDeMineral
    +extraer()
}

class Volcan{
    -unidadesDeGas
    +extraer()
}


interface hitPoints{

+recibirDaño()
+regenerar()
+vida()
+escudo()
}

Zangano  -up--|> Individuo
Larva    -up--|> Individuo
RazaZerg "1"  o-- "*" Edificio
RazaZerg "1"  o-- "*" Individuo
RazaZerg   ..|>  Ejecutable

Criadero -up--|> Edificio
Extractor -up--|> Edificio
Juego "1"  o-- "1" RazaZerg
Juego "1"  *-- "1" Mapa
Juego "1"  *-- "*" Recursos
Recursos <|-- Volcan
Recursos <|-- NodoMineral
Criadero o-- Moho
RazaZerg "1"  o-- "*" Extractor

Edificio -> "1" hitPoints

@enduml

//Que al evolucionar un zanagano se cree un edificio en la misma pos
// y se elimine el zangano.

//Juego en el metodo actualizarPosiciones le pide a cada
//individuo y edificio sus posiciones y se las envia a mapa

//Hay que hacer una clase Posicion que tenga como atributo
//coordenadas x e y.

//Para construir un edificio hice que lo haga la clase juego, asi
//soluciono el tema de chequear que el edificio se construya sobre
//lo que debe. Pero no se si van a quedar demasaidos métodos en Juego.